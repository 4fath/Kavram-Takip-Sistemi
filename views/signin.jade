extends MainLayout

block content
    ul.errors
        if errors
            each error, i in errors
                li.alert.alert-danger #{error.msg}
    form#productForm.form-horizontal(role='form', action='/user/login', method='post')
        input(type="hidden", name="_csrf", value="#{csrftoken}")
        .row
            .col-md-2
            .col-md-8
                .form-group
                    label Kullanıcı Adı
                    input#userName.form-control(type='text', name='username' placeholder='Kullanıcı Adı Giriniz', autofocus='')
                .form-group
                    label Şifre
                    input#password.form-control(type='password', name = 'password', placeholder='Şifre Giriniz')
                h4
                    a.col-md-4(href='/user/forgetPassword')
                        | Şifremi Unuttum
                .col-md-4
                input.btn.btn-success.col-md-4(name = 'Submit', type = 'submit', value = 'Giriş')
            .col-md-2

    script(src='../js/jquery.min.js')
    script(src='../js/datepicker.js')
    script(src='../js/bootstrap.min.js')
    script(src='../js/scripts.js')
    script.
        $(document).ready(function() {
            $('#productForm')
                    .formValidation({
                        framework: 'bootstrap',
                        icon: {
                            valid: 'glyphicon glyphicon-ok',
                            invalid: 'glyphicon glyphicon-remove',
                            validating: 'glyphicon glyphicon-refresh'
                        },
                        excluded: ':disabled',
                        fields: {
                            size: {
                                validators: {
                                    notEmpty: {
                                        message: 'The size is required'
                                    }
                                }
                            },
                            color: {
                                validators: {
                                    notEmpty: {
                                        message: 'The color is required'
                                    }
                                }
                            }
                        }
                    })
                    // Using Bootbox for color and size select elements
                    .find('[name="color"], [name="size"]')
                    .combobox()
                    .end()
        });

